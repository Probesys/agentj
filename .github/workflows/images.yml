
name: Publish Docker image

on:
  pull_request:
  release:
    types: [published]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dockerfile: app/Dockerfile
            image: probesys38/agentj_app
            context: app/
          - dockerfile: amavis/Dockerfile
            image: probesys38/agentj_amavis
            context: amavis/
          - dockerfile: opendkim/Dockerfile
            image: probesys38/agentj_opendkim
            context: opendkim/
          - dockerfile: policyd-rate-limit/Dockerfile
            image: probesys38/agentj_policyd-rate-limit
            context: policyd-rate-limit/
          - dockerfile: smtp/Dockerfile
            image: probesys38/agentj_smtp
            context: smtp/
          - dockerfile: syslogng/Dockerfile
            image: probesys38/agentj_syslogng
            context: syslogng/

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ matrix.image }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

