---

# -*- coding: utf-8 -*-
image: docker:latest

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_IMAGE_TAG: $CI_PIPELINE_ID
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

services:
  - docker:dind

cache:
  key: ${CI_COMMIT_REF_SLUG}

stages:
  - build
  - test
  - deploy
  - publish

before_script:
  - |-
        REGISTRY=$CI_REGISTRY/$CI_PROJECT_PATH
        if [ "$(echo $CI_COMMIT_BRANCH | grep -cE '^(main|prod|preprod)$')" -eq 1 ] ; then
            TAG=$CI_COMMIT_BRANCH
        else
            TAG=$CI_COMMIT_REF_NAME
        fi
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        echo $TAG

app_build:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}
  variables:
    IMG: app
  script:
    - sed -i "s|agentj_version|$TAG|g" $CI_PROJECT_DIR/$IMG/.env.example
    - cd $CI_PROJECT_DIR/$IMG && docker build
        --target base
        --build-arg BUILDKIT_INLINE_CACHE=1
        -t $REGISTRY/agentj_$IMG:base .
    - cd $CI_PROJECT_DIR/$IMG && docker build
        --cache-from $REGISTRY/agentj_$IMG:$TAG
        --build-arg BUILDKIT_INLINE_CACHE=1
        -t $REGISTRY/agentj_$IMG:$TAG .
    - docker push $REGISTRY/agentj_$IMG:$TAG
  only:
    changes:
      - app/*
      - app/**/*

amavis_build:
  stage: build
  variables:
    IMG: amavis
  script:
    - cd $CI_PROJECT_DIR/$IMG && docker build
        --cache-from $REGISTRY/agentj_$IMG:$TAG
        --build-arg BUILDKIT_INLINE_CACHE=1
        -t $REGISTRY/agentj_$IMG:$TAG .
    - docker push $REGISTRY/agentj_$IMG:$TAG
  only:
      changes:
        - amavis/*
        - amavis/**/*

smtp_build:
  stage: build
  variables:
    IMG: smtp
  script:
    - cd $CI_PROJECT_DIR/$IMG && docker build
        --cache-from $REGISTRY/agentj_$IMG:$TAG
        --build-arg BUILDKIT_INLINE_CACHE=1
        -t $REGISTRY/agentj_$IMG:$TAG .
    - docker push $REGISTRY/agentj_$IMG:$TAG
  only:
    changes:
      - smtp/*
      - smtp/**/*

opendkim_build:
  stage: build
  variables:
    IMG: opendkim
  script:
    - cd $CI_PROJECT_DIR/$IMG && docker build
        --cache-from $REGISTRY/agentj_$IMG:$TAG
        --build-arg BUILDKIT_INLINE_CACHE=1
        -t $REGISTRY/agentj_$IMG:$TAG .
    - docker push $REGISTRY/agentj_$IMG:$TAG
  only:
    changes:
      - opendkim/*

policyd-rate-limit_build:
  stage: build
  variables:
    IMG: policyd-rate-limit
  script:
    - cd $CI_PROJECT_DIR/$IMG && docker build
        --cache-from $REGISTRY/agentj_$IMG:$TAG
        --build-arg BUILDKIT_INLINE_CACHE=1
        -t $REGISTRY/agentj_$IMG:$TAG .
    - docker push $REGISTRY/agentj_$IMG:$TAG
  only:
    changes:
      - policyd-rate-limit/*

syslogng_build:
  stage: build
  variables:
    IMG: syslogng
  script:
    - cd $CI_PROJECT_DIR/$IMG && docker build
        --cache-from $REGISTRY/agentj_$IMG:$TAG
        --build-arg BUILDKIT_INLINE_CACHE=1
        -t $REGISTRY/agentj_$IMG:$TAG .
    - docker push $REGISTRY/agentj_$IMG:$TAG
  only:
    changes:
      - syslogng/*
      - syslogng/**/*

# This task is manually triggered only
mass_build:
  stage: build
  script:
    - for DIR in amavis app smtp opendkim policyd-rate-limit syslogng ;
        do cd $CI_PROJECT_DIR/$DIR && docker build
        --cache-from $REGISTRY/agentj_$DIR:main
        --build-arg BUILDKIT_INLINE_CACHE=1
        -t $REGISTRY/agentj_$DIR:main . ;
        docker push $REGISTRY/agentj_$DIR:main ;
        done
  when: manual

deploy-dev:
  stage: deploy
  cache: {}
  environment:
    name: dev
  variables:
    DEPLOY_USER: docker
    DEPLOY_DIR: "/home/$DEPLOY_USER/agentj-docker"
    TAG: "main"
  before_script:
    - apk add --no-cache rsync
    - echo $TAG
    - REGISTRY="$CI_REGISTRY/$CI_PROJECT_PATH"
    - echo $REGISTRY
  script:
    - mkdir ~/.ssh && ssh-keyscan $DEPLOY_DEV >> ~/.ssh/known_hosts && chmod 700 ~/.ssh
    - echo "$SSH_CONFIG" > ~/.ssh/config && chmod 400 ~/.ssh/config
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa && chmod 400 ~/.ssh/id_rsa
    - export DOCKER_HOST="ssh://${DEPLOY_USER:-$USER}@${DEPLOY_DEV:-$1}"
    - sed -i "s|probesys38|$REGISTRY|g" docker-compose.yml
    - echo $DEPLOY_DIR
    - ssh $DEPLOY_USER@$DEPLOY_DEV -C "[ ! -d $DEPLOY_DIR ] && mkdir -p $DEPLOY_DIR || true"
    - ssh $DEPLOY_USER@$DEPLOY_DEV -C "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - rsync -arv --exclude=".env" ./ $DEPLOY_USER@$DEPLOY_DEV:$DEPLOY_DIR/
    - ssh $DEPLOY_USER@$DEPLOY_DEV -C "cd $DEPLOY_DIR/ && docker compose down"
    - docker image rm $(docker images -q --filter=reference="*/*/*/*agentj*") || true
    - docker volume rm agentj-docker_public || true
    - ssh $DEPLOY_USER@$DEPLOY_DEV -C "cd $DEPLOY_DIR/ && docker compose up -d"
  except:
    - merge_requests
  only:
    - main

deploy-preprod:
  stage: deploy
  cache: {}
  environment:
    name: preprod
  variables:
    DEPLOY_USER: docker
    DEPLOY_DIR: "/home/$DEPLOY_USER/agentj-docker"
    TAG: "preprod"
  before_script:
    - apk add --no-cache rsync
    - echo $TAG
    - REGISTRY="$CI_REGISTRY/$CI_PROJECT_PATH"
    - echo $REGISTRY
  script:
    - mkdir ~/.ssh
    - echo $DEPLOY_PREPROD_HOST_SSHD_PUB_KEY
    - echo "$DEPLOY_PREPROD_HOST_SSHD_PUB_KEY" >> ~/.ssh/known_hosts
    - chmod 700 ~/.ssh
    - echo $SSH_CONFIG_PREPROD
    - echo "$SSH_CONFIG_PREPROD" > ~/.ssh/config
    - chmod 400 ~/.ssh/config
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - echo $DEPLOY_PREPROD_HOST
    - export DOCKER_HOST="ssh://${DEPLOY_USER:-$USER}@${DEPLOY_PREPROD_HOST:-$1}"
    - echo $DOCKER_HOST
    - sed -i "s|probesys38|$REGISTRY|g" docker-compose.yml
    - echo $DEPLOY_DIR
    - ssh $DEPLOY_USER@$DEPLOY_PREPROD_HOST -C "[ ! -d $DEPLOY_DIR ] && mkdir -p $DEPLOY_DIR || true"
    - ssh $DEPLOY_USER@$DEPLOY_PREPROD_HOST -C "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - rsync -arv --exclude=".env" ./ $DEPLOY_USER@$DEPLOY_PREPROD_HOST:$DEPLOY_DIR/
    - ssh $DEPLOY_USER@$DEPLOY_PREPROD_HOST -C "cd $DEPLOY_DIR/ && docker compose down"
    - docker image rm $(docker images -q --filter=reference="*/*/*/*agentj*") || true
    - docker volume rm agentj-docker_public || true
    - ssh $DEPLOY_USER@$DEPLOY_PREPROD_HOST -C "sed -i "s/VERSION=.*/VERSION=$TAG/" /home/docker/agentj-docker/.env"
    - ssh $DEPLOY_USER@$DEPLOY_PREPROD_HOST -C "cd $DEPLOY_DIR/ && docker compose up -d"
  except:
    - merge_requests
  only:
    - preprod

deploy-tags:
  stage: deploy
  cache: {}
  environment:
    name: preprod
    url: https://agentj-$CI_ENVIRONMENT_SLUG.$DOMAIN
  variables:
    DEPLOY_USER: docker
    DEPLOY_DIR: "/home/$DEPLOY_USER/agentj-docker"
    TAG: $CI_COMMIT_TAG
  before_script:
    - apk add --no-cache rsync
    - echo $TAG
    - REGISTRY="$CI_REGISTRY/$CI_PROJECT_PATH"
    - echo $REGISTRY
  script:
    - mkdir ~/.ssh && ssh-keyscan $DEPLOY_PREPROD >> ~/.ssh/known_hosts && chmod 700 ~/.ssh
    - echo "$SSH_CONFIG" > ~/.ssh/config && chmod 400 ~/.ssh/config
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa && chmod 400 ~/.ssh/id_rsa
    - export DOCKER_HOST="ssh://${DEPLOY_USER:-$USER}@${DEPLOY_PREPROD:-$1}"
    - sed -i "s|probesys38|$REGISTRY|g" docker-compose.yml
    - sed -i "s|agentj_version|$TAG|g" .env.example
    - echo $DEPLOY_DIR
    - ssh $DEPLOY_USER@$DEPLOY_PREPROD -C "[ ! -d $DEPLOY_DIR ] && mkdir -p $DEPLOY_DIR || true"
    - rsync -arv --exclude=".env" ./ $DEPLOY_USER@$DEPLOY_PREPROD:$DEPLOY_DIR/
    - ssh $DEPLOY_USER@$DEPLOY_PREPROD -C "cd $DEPLOY_DIR/ && docker compose down"
    - docker image rm $(docker images -q --filter=reference="*/*/*/*agentj*") || true
    - docker volume rm agentj-docker_public || true
    - ssh $DEPLOY_USER@$DEPLOY_PREPROD -C "cd $DEPLOY_DIR/ && docker compose up -d"
  only:
    - tags
  except:
    - branches
    - merge_requests

test-mail:
  stage: test
  before_script:
    - UID="1829"
    - GID="1829"
    - apk add bash curl perl
    - curl -O https://jetmore.org/john/code/swaks/files/swaks-20240103.0/swaks --output-dir /usr/local/bin/
    - chmod +x /usr/local/bin/swaks
  script:
    - cp .env.example .env
    - sed -i "s|#COMPOSE_FILE=.*|COMPOSE_FILE=docker-compose.yml:compose.dev.yml:compose.test.yml|g" .env
    - sed -i "s|example.com|agentj.local|g" .env
    - echo "PROXY_PORT=9819" >> .env
    - echo "UID=$UID" >> .env
    - echo "GID=$GID" >> .env
    - echo "SMTP_OUT_PORT=2687" >> .env
    - echo "SMTPTEST_TO_AGENTJ=2983" >> .env
    - echo "SMTPTEST_VIA_AGENTJ=2985" >> .env
    - echo "SMTPTEST_VIA_AGENTJ_BADRELAY=2988" >> .env
    - docker compose up -d --build
    - ./tests/test-from-host.sh
    - cat tests/results/*
  artifacts:
    paths:
      - tests/results/*
  only:
    - merge_requests
