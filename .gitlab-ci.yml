---

# -*- coding: utf-8 -*-
image: docker:latest

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_IMAGE_TAG: $CI_PIPELINE_ID

services:
  - docker:dind

cache:
  key: ${CI_COMMIT_REF_SLUG}

stages:
  - build
  - deploy

before_script:
  - echo "$REGISTRY_PASSWORD" | docker login -u "$REGISTRY_USER" --password-stdin $REGISTRY

app_build:
  stage: build
  variables:
    IMG: app
  script:
    - cd $CI_PROJECT_DIR/$IMG && docker build -t $REGISTRY/agentj_$IMG .
    - docker push $REGISTRY/agentj_$IMG:latest
  only:
    changes:
      - app/*
      - app/**/*

amavis_build:
  stage: build
  variables:
    IMG: amavis
  script:
    - cd $CI_PROJECT_DIR/$IMG && docker build -t $REGISTRY/agentj_$IMG .
    - docker push $REGISTRY/agentj_$IMG:latest
  only:
    changes:
      - amavis/*
      - amavis/**/*

relay_build:
  stage: build
  variables:
    IMG: relay
  script:
    - cd $CI_PROJECT_DIR/$IMG && docker build -t $REGISTRY/agentj_$IMG .
    - docker push $REGISTRY/agentj_$IMG:latest
  only:
    changes:
      - relay/*
      - relay/**/*

smtp_build:
  stage: build
  variables:
    IMG: smtp
  script:
    - cd $CI_PROJECT_DIR/$IMG && docker build -t $REGISTRY/agentj_$IMG .
    - docker push $REGISTRY/agentj_$IMG:latest
  only:
    changes:
      - smtp/*
      - smtp/**/*

syslogng_build:
  stage: build
  variables:
    IMG: syslogng
  script:
    - cd $CI_PROJECT_DIR/$IMG && docker build -t $REGISTRY/agentj_$IMG .
    - docker push $REGISTRY/agentj_$IMG:latest
  only:
    changes:
      - syslogng/*
      - syslogng/**/*

web_build:
  stage: build
  variables:
    IMG: web
  script:
    - cd $CI_PROJECT_DIR/$IMG && docker build -t $REGISTRY/agentj_$IMG .
    - docker push $REGISTRY/agentj_$IMG:latest
  only:
    changes:
      - web/*
      - web/**/*

deploy-dev:
  stage: deploy
  cache: {}
  environment:
    name: dev
  variables:
    DEPLOY_USER: docker
    DOCKER_IMAGE_TAG: latest
  before_script:
    - apk add --no-cache docker-compose
  script:
    - mkdir ~/.ssh && ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts && chmod 700 ~/.ssh
    - echo "$SSH_CONFIG" > ~/.ssh/config && chmod 400 ~/.ssh/config
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa && chmod 400 ~/.ssh/id_rsa
    - export DOCKER_HOST="ssh://${DEPLOY_USER:-$USER}@${DEPLOY_HOST:-$1}"
    - scp -v -C docker-compose.yml $DEPLOY_USER@$DEPLOY_HOST:/home/$DEPLOY_USER/agentj-docker/docker-compose.yml
    - ssh $DEPLOY_USER@$DEPLOY_HOST -C "cd /home/$DEPLOY_USER/agentj-docker/ && docker-compose down"
    - docker image rm $(docker image ls -q -f reference=*/*agentj_*)
    - docker volume rm agentj-docker_public
    - ssh $DEPLOY_USER@$DEPLOY_HOST -C "cd /home/$DEPLOY_USER/agentj-docker/ && docker-compose up -d"
  except:
    refs:
      - master

