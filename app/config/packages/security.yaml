security:
    encoders:
        App\Entity\User: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        #in_memory: { memory: ~ }
        database_users:
            entity: { class: App\Entity\User, property: username }

    role_hierarchy:
        ROLE_USER: [ROLE_ALLOWED_TO_SWITCH]
        ROLE_ADMIN: [ROLE_USER, ROLE_ALLOWED_TO_SWITCH]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN,ROLE_ALLOWED_TO_SWITCH]
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        check:
            pattern: ^/check
            security:  false
        captcha:
            pattern: ^/captcha-handler
            security:  false
        main:
            http_basic: ~
            # La connexion n'est pas requise sur toutes les pages
            # par exemple la page d'accueil
            anonymous: ~
            # les urls auxquels s'appliquent ce firewall, dans ce cas, ce sont toutes les urls
            pattern: ^/
            form_login:
                # Le nom de la route de la page de connexion
                check_path: app_login
                # Le nom de la route où se trouve le formulaire de connexion
                # Si un utilisateur tente d'acceder à une page protégée sans en avoir les droits
                # il sera redirigé sur cette page
                login_path: app_login
                # Securisation des formulaires
                csrf_token_generator: security.csrf.token_manager
                # La page par defaut apres une connexion reussie
                #default_target_path: admin
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
            logout:
                # La route où se trouve le process de deconnexion
                path: app_logout
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            switch_user: true
            context: agentj

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/admin, roles: [ROLE_ADMIN] }
         - { path: ^/policy/, roles: ROLE_SUPER_ADMIN }
         - { path: ^/domain, roles: ROLE_ADMIN }
         - { path: ^/, roles: ROLE_USER }
