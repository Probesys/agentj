# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: '%env(DEFAULT_LOCALE)%'
    app_locales: en|fr
    salt: '%env(TOKEN_ENCRYPTION_SALT)%'
    iv:  '%env(TOKEN_ENCRYPTION_IV)%'
    domain: '%env(DOMAIN)%'
    scheme: '%env(DOMAIN_SCHEME)%'
    app.agentj-version: '%env(AGENTJ_VERSION)%'
    app.timezone: '%env(TIMEZONE)%'
    app.amavisd-release: '%env(AMAVIS_RELEASE__PATH)%'
    app.dkim_generator: '%env(DKIM_GENERATOR)%'
    app.dkim_removal: '%env(DKIM_REMOVAL)%'
    app.smtp-transport: '%env(SMTP_TRANSPORT)%'
    app.upload_directory: '%kernel.project_dir%/public/files/upload/'
    app.amavis_quarantine_dir: '%env(AMAVIS_QUARANTINE_DIR)%'
    app.amavis_quarantine_nbdays_before_delete: '%env(AMAVIS_QUARANTINE_NBDAYS_BEFORE_DELETE)%'
    app.domain_default_spam_level: '%env(DOMAIN_DEFAULT_SPAM_LEVEL)%'
    app.domain_min_spam_level: '%env(DOMAIN_MIN_SPAM_LEVEL)%'
    app.domain_max_spam_level: '%env(DOMAIN_MAX_SPAM_LEVEL)%'
    app.domain_mail_authentification_sender: '%env(DOMAIN_MAIL_AUTHENTIFICATION_SENDER)%'
    app.per_page_global: '25'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App.crypt_encrypt:
       class: App\Service\CryptEncrypt
       public: true   
    App\Service\FileUploader:
        arguments: ['%app.upload_directory%', "@doctrine.orm.entity_manager"]   