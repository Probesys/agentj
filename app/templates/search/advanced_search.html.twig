{% extends 'base.html.twig' %}

{% block body %}
    <div class="m-3">
        <h3 class="mb-3">Recherche Avanc√©e</h3>

        <button id="toggleFilters" class="btn btn-primary mb-3">
            Filtres
            <span id="toggleArrow" class="arrow-right"></span>
        </button>

        <div id="filterContainer" class="filtres mt-3 mb-3 col-md-8">

            {{ form_start(form) }}
            {{ form_row(form.startDate) }}
            {{ form_row(form.endDate) }}
            {{ form_row(form.fromAddr) }}
            {{ form_row(form.email) }}
            {{ form_row(form.subject) }}
            {{ form_row(form.mailId) }}
            {{ form_row(form.replyTo) }}
            <div class="form-group">
                <label>Score Amavis</label>
                <div class="d-flex">
                    {{ form_widget(form.bspamLevelMin, { 'attr': { 'placeholder': 'Min' } }) }}
                    {{ form_widget(form.bspamLevelMax, { 'attr': { 'placeholder': 'Max', 'class': 'ml-2' } }) }}
                </div>
            </div>

            {{ form_row(form.size) }}
            {{ form_row(form.host) }}

            <div class="form-group switch-container">
                <label>{{ form_label(form.messageType) }}</label>
                <div class="switch-toggle">
                    {{ form_widget(form.messageType) }}
                </div>
            </div>

            {{ form_end(form) }}
        </div>

        <table id="message-table" class="table table-hover search" style="margin: 3rem 0 5rem 0" data-active-filters="{{ activeFilters|json_encode }}">
            <thead>
            <tr class="table-header">
                <th>{{ 'Search.MailId'|trans }}</th>
                <th>{{ 'Search.Sender'|trans }}</th>
                <th>{{ 'Search.Recipient'|trans }}</th>
                <th>{{ 'Search.Subject'|trans }}</th>
                <th>{{ 'Search.Date'|trans }}</th>
                <th class="amavis-header" style="display: none;">{{ 'Search.AmavisOutput'|trans }}</th>
                <th class="size-header" style="display: none;">{{ 'Search.Size'|trans }}</th>
                <th class="host-header" style="display: none;">{{ 'Search.Host'|trans }}</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            {% include 'search/_messages.html.twig' with { 'msgs': msgs } %}
            </tbody>
        </table>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const toggleButton = document.getElementById('toggleFilters');
                const filterContainer = document.getElementById('filterContainer');
                const toggleArrow = document.getElementById('toggleArrow');

                // Toggle filter visibility
                toggleButton.addEventListener('click', function () {
                    filterContainer.style.display = filterContainer.style.display === 'none' ? 'block' : 'none';
                    toggleArrow.classList.toggle('arrow-down');
                    toggleArrow.classList.toggle('arrow-right');
                });

                // Mapping of form fields to their corresponding table header classes
                const columnMapping = {
                    'bspamLevelMin': '.amavis-header',
                    'bspamLevelMax': '.amavis-header',
                    'size': '.size-header',
                    'host': '.host-header',
                    // Add more mappings as needed for future fields
                };

                // Handle form submission via Ajax
                $('form').on('submit', function (e) {
                    e.preventDefault();

                    var $form = $(this);
                    var url = $form.attr('action');

                    // Handle visibility for bspamLevelMin and bspamLevelMax explicitly
                    const bspamMin = $form.find(`[name="search_filter[bspamLevelMin]"]`).val();
                    const bspamMax = $form.find(`[name="search_filter[bspamLevelMax]"]`).val();

                    // Check if either min or max is not null or an empty string (including 0)
                    const bspamActive = bspamMin !== null && bspamMin !== '' || bspamMax !== null && bspamMax !== '';

                    // Toggle amavis-header visibility based on bspam level fields
                    if (bspamActive) {
                        document.querySelector('.amavis-header').style.display = '';
                    } else {
                        document.querySelector('.amavis-header').style.display = 'none';
                    }

                    // Iterate over the column mapping to check each form field except bspamLevelMin and bspamLevelMax
                    Object.keys(columnMapping).forEach(function (fieldName) {
                        if (fieldName !== 'bspamLevelMin' && fieldName !== 'bspamLevelMax') {
                            const headerSelector = columnMapping[fieldName];
                            const fieldValue = $form.find(`[name="search_filter[${fieldName}]"]`).val();

                            // Toggle header visibility based on field value (including zero)
                            if (fieldValue !== null && fieldValue !== '') {
                                document.querySelector(headerSelector).style.display = '';
                            } else {
                                document.querySelector(headerSelector).style.display = 'none';
                            }
                        }
                    });

                    $.ajax({
                        url: url,
                        method: $form.attr('method'),
                        data: $form.serialize(),
                        success: function (response) {
                            // Update the table body with new content
                            $('table.search tbody').html(response.content);
                        }
                    });
                });
            });
        </script>



        <style>
            #toggleArrow {
                display: inline-block;
                margin-left: 10px;
                width: 0;
                height: 0;
                border-style: solid;
                border-width: 6px 4px 0 4px;
                border-color: #fff transparent transparent transparent;
                vertical-align: middle;
            }

            .arrow-right {
                transform: rotate(0deg);
            }

            .arrow-down {
                transform: rotate(270deg);
            }

            .switch-container {
                display: flex;
                align-items: center;
            }

        </style>

    </div>
{% endblock %}