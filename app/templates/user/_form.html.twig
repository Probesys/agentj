{% set controller = app.request.attributes.get('_controller') %}
{{ form_start(form) }}
{% if user.office365PrincipalName is not null %}
    <div class="form-group row">
        <div class="col-form-label col-sm-2 required">{{ 'Entities.User.fields.office365PrincipalName' | trans }}</div>
        <div class="col-sm-10">
            {{ user.office365PrincipalName }}
        </div>
    </div>
{% endif %}
{% if form.fullname is defined %}
    {{ form_row(form.fullname) }}
{% endif %}

{% if (app.request.get('_route') != 'user_email_new') and (app.request.get('_route') != 'user_email_edit') %}
    {% if form.username is defined %}
        {{ form_row(form.username) }}
    {% endif %}
{% endif %}

{% if (app.request.get('_route') != 'user_email_new') and (app.request.get('_route') != 'user_email_edit') and (app.request.get('_route') != 'new_user_email_alias') and (app.request.get('_route') != 'user_email_alias_edit')%}
    {% if form.roles is defined %}
        <div data-role='["{{ user.roles[0] }}"]'>
            {{ form_row(form.roles, {'attr': {'id': 'roles'}}) }}
        </div>
    {% endif %}
{% endif %}

{% if form.email is defined %}
    {{ form_row(form.email) }}
{% endif %}

{% if (app.request.get('_route') == 'user_email_new') or (app.request.get('_route') == 'user_email_edit') %}
    {% if form.groups is defined %}
        {{ form_row(form.groups) }}
    {% endif %}
{% endif %}

{% if (app.request.get('_route') != 'new_user_email_alias') and (app.request.get('_route') != 'user_email_alias_edit') and (app.request.get('_route') != 'user_local_new') %}
    {% if form.sharedWith is defined %}
        {{ form_row(form.sharedWith) }}
    {% endif %}
{% endif %}

{% if form.password is defined %}
    {{ form_row(form.password.first, {'label': 'Entities.User.fields.password'|trans}) }}
    {{ form_row(form.password.second, {'label': 'Entities.User.fields.repeatPassword'|trans}) }}
{% endif %}

{% if (app.request.get('_route') != 'new_user_email_alias') and (app.request.get('_route') != 'user_email_alias_edit') and (app.request.get('_route') != 'user_local_new') %}
    {% if form.domain is defined %}
        {{ form_row(form.domain) }}
    {% endif %}
{% endif %}

{% if form.domains is defined %}
    {{ form_row(form.domains) }}
    <div id="domain-warning" style="color: red; display: none;">
        {{ 'Generics.messages.selectAtLeastOneDomain'|trans }}
    </div>
    <script>
        $(document).on('shown.bs.modal', function() {
            const roleContainer = document.querySelector('[data-role]');
            const role = roleContainer.getAttribute('data-role');
            const selectElement = roleContainer.querySelector('select');

            $(selectElement).val(role).trigger('change');
        });

        $(document).ready(function() {
            $('.select2').select2();

            const rolesSelect = document.getElementById('user_roles');
            const form = document.querySelector('form'); // Adjust the selector if needed
            const domainCheckboxes = document.querySelectorAll('input[name="user[domains][]"]');
            const submitButton = form.querySelector('input[type="submit"]');
            const domainWarning = document.getElementById('domain-warning');

            function checkDomains() {
                let isChecked = false;
                domainCheckboxes.forEach(checkbox => {
                    if (checkbox.checked) {
                        isChecked = true;
                    }
                });

                submitButton.disabled = !isChecked;
                domainWarning.style.display = isChecked ? 'none' : 'block';
            }

            function refreshOnRoleChange() {
                const selectedRole = rolesSelect.value;
                if (selectedRole === '["ROLE_SUPER_ADMIN"]') {
                    domainCheckboxes.forEach(checkbox => checkbox.checked = true);
                }
                checkDomains();
            }

            // Initial checks
            checkDomains();
            refreshOnRoleChange();

            // Add event listeners
            rolesSelect.addEventListener('change', refreshOnRoleChange);
            domainCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', checkDomains);
            });
        });
    </script>
{% endif %}

{% if form.imapLogin is defined %}
    <div class="form-row form-row-imap-login" style="{% if domainHasIMAPConnector|default(false) == false or domainHasIMAPConnector|default(null) is null %}display:none;{% endif %}">
        {{ form_row(form.imapLogin) }}
    </div>
{% endif %}

{% if (app.request.get('_route') == 'new_user_email_alias') or (app.request.get('_route') == 'user_email_alias_edit') %}
    {% if form.originalUser is defined %}
        {{ form_row(form.originalUser) }}
    {% endif %}
{% endif %}

{% if form.quota is defined %}
    {% include 'partials/_quota_form.html.twig' with {'form': form} %}
{% endif %}

{% if form.report is defined %}
    <div class="form-group">
        {{ form_widget(form.report, {'attr': {'class': 'form-check-input'}}) }}
        <label class="form-check-label" for="{{ form.report.vars.id }}">
            {{ form_label(form.report, 'Envoyer le rapport') }}
        </label>
        {{ form_errors(form.report) }}
    </div>
{% endif %}

<div class="d-flex justify-content-center">
    <input type="submit" class="btn btn-primary mr-2" value="{{ button_label|default('Generics.actions.save'|trans)}}">
    <a class="btn btn-outline-secondary btn-close-modal" href="#">{{ 'Generics.actions.cancel'|trans() }}</a>
</div>
{{ form_end(form) }}

{% if (app.request.get('_route') == 'user_email_new') or (app.request.get('_route') == 'user_email_edit') %}
    {% if form.imapLogin is defined %}
        <script>
            function toggleImapLogin(selectElement) {

                const imapDomains = {{ imapDomains|json_encode|raw }}.map(domain => domain.id);

                const selectedDomain = parseInt(selectElement.value);
                const imapLoginRow = document.querySelector('.form-row-imap-login');

                if (imapDomains.includes(selectedDomain)) {
                    imapLoginRow.style.display = 'block';
                } else {
                    imapLoginRow.style.display = 'none';
                }
            }
        </script>
    {% endif %}
{% endif %}
